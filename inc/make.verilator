## these need to be set before including

ifndef TOP
	$(error TOP is not set)
endif
ifndef HDL_SOURCE
	$(error HDL_SOURCE is not set)
endif

LOG_PATH=$(BUILD_PATH)/logs
WAVEFILE=$(LOG_PATH)/$(TOP).fst
WAVESAVEFILE=$(PROJ_ROOT)/inc/wave.sav

######################################################################
# Set up verilog variables

GENHTML = genhtml

# If $VERILATOR_ROOT isn't in the environment, we assume it is part of a
# package install, and verilator is in your path. Otherwise find the
# binary relative to $VERILATOR_ROOT (such as when inside the git sources).
ifeq ($(VERILATOR_ROOT),)
VERILATOR = verilator
# VERILATOR_COVERAGE = verilator_coverage
else
export VERILATOR_ROOT
VERILATOR = $(VERILATOR_ROOT)/bin/verilator
# VERILATOR_COVERAGE = $(VERILATOR_ROOT)/bin/verilator_coverage
endif

# VERILATOR_FLAGS =
# Generate C++ in executable form
# VERILATOR_FLAGS += -cc --exe
VERILATOR_FLAGS += -cc
# Generate makefile dependencies (not shown as complicates the Makefile)
#VERILATOR_FLAGS += -MMD
# Optimize
VERILATOR_FLAGS += --x-assign 0
# Warn abount lint issues; may not want this on less solid designs
# VERILATOR_FLAGS += -Wall
# Make waveforms
VERILATOR_FLAGS += --trace-fst
# Check SystemVerilog assertions
VERILATOR_FLAGS += --assert
# Generate coverage analysis
# VERILATOR_FLAGS += --coverage
# Run make to compile model, with as many CPUs as are free
VERILATOR_FLAGS += --build -j
# Run Verilator in debug mode
# VERILATOR_FLAGS += --debug
# Add this trace to get a backtrace in gdb
#VERILATOR_FLAGS += --gdbbt

VERILATOR_FLAGS += $(CUSTOMSIMARGS)
VERILATOR_FLAGS += -CFLAGS -DDUMP_WAVE_FILE=$(WAVEFILE)
VERILATOR_FLAGS += --Mdir $(BUILD_PATH)

# Input files for Verilator
VERILATOR_INPUT = -f $(VERILATE_INCL) $(HDL_SOURCE) $(VERILATE_TOP)

######################################################################

# # Create annotated source
# VERILATOR_COV_FLAGS += --annotate $(LOG_PATH)/annotated
# # A single coverage hit is considered good enough
# VERILATOR_COV_FLAGS += --annotate-min 1
# # Create LCOV info
# VERILATOR_COV_FLAGS += --write-info $(LOG_PATH)/coverage.info
# # Input file from Verilator
# VERILATOR_COV_FLAGS += $(LOG_PATH)/coverage.dat

#TARGET=$(BUILD_PATH)/$(TOP)
VMODEL=$(BUILD_PATH)/libV$(TOP).a
VERILATORLIBS=$(BUILD_PATH)/libverilated.a -lz

VERILATOR_CFLAGS = `pkg-config --cflags verilator`

VFLAGS = $(VERILATORLIBS) $(VERILATOR_CFLAGS)

######################################################################
default: run

lib: $(VMODEL)

$(VMODEL): $(VERILATE_INCL) $(HDL_SOURCE) $(VERILATE_TOP)
	make prebuild
	$(VERILATOR) $(VERILATOR_FLAGS) $(VERILATOR_INPUT)
	@mkdir -p $(LOG_PATH)

#run: $(TARGET)
#	$(TARGET) $(VERILATE_ARGS)

view: 
	@gtkwave $(WAVEFILE) -a $(WAVESAVEFILE) > /dev/null 2>&1 &

.PHONY: prebuild
