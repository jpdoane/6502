T0:
    FETCH_PC                                # fetch OP
    SYNC

T1:
    IR <= DL                                # load IR
    FETCH_PC                                # fetch PC+1

Imm Load:
    T2: data on DB


Zero Page:
    T2: #fetch [oper]
        DL/ADL ADL/ABL                          # LO -> ADL -> ABL
        Z/ADH0 Z/ADH1-7 ADH/ABH                 # zero -> ADH -> ABH
    T3: data on DB

ABS(X/Y) Load:  
    T2:
        DL/DB  DB/ADD                       # LO -> ALU
        Z/ADD ?= abs                        # LO+0
        SB/ADD ?= !abs                      # LO+X/Y
        SB/X ?= absX                        # LO+X
        SB/Y ?= absY                        # LO+Y
        SUMS                                # LO+X/Y/0 -> ADD
        FETCH_PC                            # fetch HI
    T3:
        DL/ADH                              # HI -> ADH
        ADD/ADL                             # ADD -> ADL
        ADL/ABH, ADH/ABH                    # fetch HILO+X/Y (no carry)
        SKIP_CYCLE = rACR                   # skip T4 unless LO+X/Y carried
        SB/ADH SB/ADD                       # HI->SB->ALU
        ALU_INC = rACR                      # if LO+X/Y carried, HI+1
        ALU_DEC = rAVR                      # if LO+X/Y overflowed, HI-1
    T4:
        ADD/ADH ADH/ABH                     # fetch HILO+X/Y (with carry)
    T5: data on DB

    
X,ind Load: (zero page load [operand + X] to get LLHH )
    T2: #add X to operand to get zero page address
        DL/DB DB/ADD                        # oper -> ALU
        SB/ADD SB/X SUMS                    # oper+X -> ADD
    T3: #zero page load oper+X, and compute oper+X+1
        ADD/ADL ADL/ABL                     # ADD -> ADL -> ABL
        Z/ADH0 Z/ADH1-7 ADH/ABH             # zero -> ADH -> ABH
        ADD/SB SB/ADD ALU_INC               # oper+X+1
    T4: #save LL = [oper+X] zero page load oper+X+1
        DL/DB ALU_NOP                       # LL -> ALU
        ADD/ADL ADL/ABL                     # ADD -> ADL -> ABL
        Z/ADH0 Z/ADH1-7 ADH/ABH             # zero -> ADH -> ABH
    T5: #save HH = [oper+X+1], fetch LLHH
        DL/ADH ADH/ABH                      # HH -> ADH -> ABH
        ADD/ADL ADL/ABL                     # ADD -> ADL -> ABL
    T6: data on DB

ind,Y Load: (zero page load [operand]+Y to get LLHH )
    T2:
        DL/ADL ADL/ABL                      # IAL -> ADL -> ABL
        Z/ADH0 Z/ADH1-7 ADH/ABH             # zero -> ADH -> ABH
        ADD/SB SB/ADD ALU_INC               # oper+X+1



    T2: #add X to operand to get zero page address
        DL/DB DB/ADD                        # oper -> ALU
        SB/ADD SB/X SUMS                    # oper+X -> ADD
    T3: #zero page load oper+X, and compute oper+X+1
        ADD/ADL ADL/ABL                     # ADD -> ADL -> ABL
        Z/ADH0 Z/ADH1-7 ADH/ABH             # zero -> ADH -> ABH
        ADD/SB SB/ADD ALU_INC               # oper+X+1
    T4: #save LL = [oper+X] zero page load oper+X+1
        DL/DB ALU_NOP                       # LL -> ALU
        ADD/ADL ADL/ABL                     # ADD -> ADL -> ABL
        Z/ADH0 Z/ADH1-7 ADH/ABH             # zero -> ADH -> ABH
    T5: #save HH = [oper+X+1], fetch LLHH
        DL/ADH ADH/ABH                      # HH -> ADH -> ABH
        ADD/ADL ADL/ABL                     # ADD -> ADL -> ABL
    T6: data on DB
